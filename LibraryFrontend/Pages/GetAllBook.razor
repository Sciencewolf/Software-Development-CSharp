@page "/Book/all"
@using LibraryBackend.Shared
@using LibraryFrontend.Services
@using LibraryFrontend.Components
@inject IBookService BookService

<PageTitle>@Title</PageTitle>
<h3>@Title</h3>

@if (_error)
{
    <ErrorComponent ReloadUrl="/Book/all" />   
}
else if(_book is null)
{
    <p>Loading...</p>
}
else {
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Author</th>
                <th>Year of publication</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var book in _book)
            {
                <tr>
                    <td>@book.Id</td>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.YearOfPublication.ToShortDateString()</td>
                    <td><a href="/book/@book.Id" class="btn btn-info">Details</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Book>? _book { get; set; }
    private bool _error = false;
    private const string Title = "All Book's";

    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _book = await BookService.GetAllAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _book = null;
            _error = !_error;
        }
    }
}
