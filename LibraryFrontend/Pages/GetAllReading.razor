@page "/Reading/all"
@using LibraryBackend.Shared
@using LibraryFrontend.Services
@using LibraryFrontend.Components
@inject IReadingService ReadingService

<PageTitle>@Title</PageTitle>
<h3>@Title</h3>

@if (_errorMessage)
{
    <ErrorComponent ReloadUrl="/Reading/all" />
}
else if (Reading is null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Address</th>
                <th>BirthDate</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reading in Reading)
            {
                <tr>
                    <td>@reading.Id</td>
                    <td>@reading.Name</td>
                    <td>@reading.Address</td>
                    <td>@reading.BirthDate.ToShortDateString()</td>
                    <td><a href="/Reading/@reading.Id" class="btn btn-info">Details</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Reading>? Reading { get; set; }
    private bool _errorMessage = false;
    private const string Title = "All Reading's";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Reading = await ReadingService.GetAllAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Reading = null;
            _errorMessage = !_errorMessage;
        }
    }
}
